version: "3.7"

networks:
  net1:
    driver: overlay
    attachable: true

services:
  prometheus:
    image: prom/prometheus
    volumes:
      - ./:/etc/prometheus/
      - ./data/:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
      - "--web.enable-admin-api"
      - "--web.enable-lifecycle"
    ports:
      - 9090:9090
    depends_on:
      - cadvisor
      - node-exporter
    networks:
      - net1
    deploy:
      placement:
        constraints:
          - node.role==manager
      restart_policy:
        condition: on-failure

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    networks:
      - net1
    deploy:
      mode: global
      restart_policy:
        condition: on-failure

  cadvisor:
    image: google/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    networks:
      - net1
    deploy:
      mode: global
      restart_policy:
        condition: on-failure

  grafana:
    image: grafana/grafana:7.0.3
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    ports:
      - 3000:3000
    depends_on:
      - prometheus
    networks:
      - net1
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
