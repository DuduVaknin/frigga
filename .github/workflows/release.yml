name: Release to PyPi and DockerHub

on:
  release:
    types: [published, edited]

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      APP_NAME: frigga
      RELEASE_REF: ${{ github.ref }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.9"
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@3.0.0
      - name: Set Release Version
        run: |
          export RELEASE_VERSION=${GITHUB_REF_SLUG}
          echo -n $RELEASE_VERSION > ./version
          echo "RELEASE_VERSION=${RELEASE_VERSION}" >> $GITHUB_ENV
          export _DOCKER_TAG="unfor19/${APP_NAME}:${RELEASE_VERSION}"
          echo "DOCKER_TAG=${_DOCKER_TAG}" >> $GITHUB_ENV
      - name: Validate Release Version
        run: |
          echo $GITHUB_ENV
          bash scripts/version_validation.sh
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools==50.3.2 wheel==0.35.1 twine==3.1.1
          pip install -r requirements.txt
      - name: Test - Deploy Stack
        env:
          FRIGGA_TESTING: true
        run: bash docker-compose/deploy_stack.sh
      - name: Test - Apply Changes
        run: bash docker-compose/apply_changes.sh  
      - name: Build Package
        run: |
          python setup.py sdist bdist_wheel
          twine check ./dist/*
      - name: Publish to PyPi
        env:
          TWINE_USERNAME: ${{ secrets.PIP_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PIP_PASSWORD }}
          TWINE_NON_INTERACTIVE: true
        run: |
          twine upload ./dist/*
      - name: Build Docker Image
        run: |
          docker build . --file Dockerfile --tag "${DOCKER_TAG}"
      - name: Push to DockerHub
        run: |
          echo '${{ secrets.DOCKER_PASSWORD }}' | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker push "${DOCKER_TAG}" && echo "Pushed $DOCKER_TAG"