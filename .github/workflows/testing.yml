name: testing
on: push
jobs:
  docker_build:
    runs-on: ubuntu-latest
    name: docker build
    steps:
      - uses: actions/checkout@v2
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x
      - name: Set env vars
        run: |
          export BRANCH_NAME=${{ env.GITHUB_REF_SLUG }}
          [[ $BRANCH_NAME = "master" ]] && export BRANCH_NAME=master-test
          echo DOCKER_TAG=docker.pkg.github.com/${GITHUB_REPOSITORY}/${BRANCH_NAME//\//-}:test >> $GITHUB_ENV
      - name: docker login
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u $GITHUB_ACTOR --password-stdin
      - name: docker pull
        run: |
          docker pull "$DOCKER_TAG" || true
      - name: docker build
        run: docker build . -t cached --cache-from="$DOCKER_TAG"
      - name: docker tag
        run: docker tag cached "$DOCKER_TAG"
      - name: docker push
        run: docker push "$DOCKER_TAG" || true


  ubuntu-cli:
    needs: docker_build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x
      - name: Set env vars
        run: |
          export BRANCH_NAME=${{ env.GITHUB_REF_SLUG }}
          [[ $BRANCH_NAME = "master" ]] && export BRANCH_NAME=master-test
          echo DOCKER_TAG=docker.pkg.github.com/${GITHUB_REPOSITORY}/${BRANCH_NAME//\//-}:test >> $GITHUB_ENV          
      - name: docker login
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u $GITHUB_ACTOR --password-stdin
      - name: docker pull
        run: |
          docker pull "$DOCKER_TAG"
      - name: Install CLI
        run: |
          sudo apt remove python3-pip
          python -m pip install --upgrade pip
          pip install .
      - name: Deploy Stack
        env:
          FRIGGA_TESTING: true
        run: bash docker-compose/deploy_stack.sh
      - name: Apply Changes
        run: ./docker-compose/apply_changes.sh

  ubuntu-webserver:
    needs: docker_build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x
      - name: Set env vars
        run: |
          export BRANCH_NAME=${{ env.GITHUB_REF_SLUG }}
          [[ $BRANCH_NAME = "master" ]] && export BRANCH_NAME=master-test
          echo DOCKER_TAG=docker.pkg.github.com/${GITHUB_REPOSITORY}/${BRANCH_NAME//\//-}:test >> $GITHUB_ENV          
      - name: docker login
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u $GITHUB_ACTOR --password-stdin
      - name: docker pull
        run: |
          docker pull "$DOCKER_TAG"
      - name: Deploy Stack
        env:
          FRIGGA_TESTING: true
        run: bash docker-compose/deploy_stack.sh
      - name: Apply Changes
        run: ./docker-compose/apply_changes_webserver.sh

  ubuntu-websocket:
    needs: docker_build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x
      - name: Set env vars
        run: |
          export BRANCH_NAME=${{ env.GITHUB_REF_SLUG }}
          [[ $BRANCH_NAME = "master" ]] && export BRANCH_NAME=master-test
          echo DOCKER_TAG=docker.pkg.github.com/${GITHUB_REPOSITORY}/${BRANCH_NAME//\//-}:test >> $GITHUB_ENV          
      - name: docker login
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u $GITHUB_ACTOR --password-stdin
      - name: docker pull
        run: |
          docker pull "$DOCKER_TAG"
      - name: Deploy Stack
        env:
          FRIGGA_TESTING: true
        run: bash docker-compose/deploy_stack.sh
      - name: Apply Changes
        run: ./docker-compose/apply_changes_websocket.sh        

  minikube:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install minikube
        uses: unfor19/ga-setup-minikube@ca5bb1bd1ae316f95a86f882b9eb9ae866b8ab9e
        with:
          minikube-version: 1.7.2
          k8s-version: 1.17.2
      - name: Start minikube
        run: |
          minikube start --vm-driver=docker --kubernetes-version v1.17.2
          kubectl cluster-info
          kubectl get pods -n kube-system
      - name: Test minikube
        run: bash kubernetes/minikube_test.sh
      - name: Deploy Stack
        env:
          FRIGGA_TESTING: true
        run: bash kubernetes/deploy_stack.sh
      - name: Apply Changes
        env:
          FRIGGA_TESTING: true
        run: bash kubernetes/exec_apply.sh
      - name: Validate
        env:
          FRIGGA_TESTING: true
        run: bash kubernetes/validate.sh
